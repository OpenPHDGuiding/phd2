#!/usr/bin/env bash

# this script uses vcpkg to create the bundle of third-party libraries needed by PHD2
#  https://github.com/microsoft/vcpkg

set -x
set -e

CMD="/c/Windows/System32/cmd.exe"
CMAKE=$(cygpath -w '/c/Program Files/CMake/bin/cmake.exe')

platform=x86-windows

PACKAGES=(
    cfitsio:$platform
    curl[ssl]:$platform
    gtest:$platform
    eigen3:$platform
    opencv2:$platform
)

do_bootstrap () (
    # bootstrap the vcpkg system into $VCPKG_ROOT
    rm -rf "$VCPKG_ROOT"
    git clone https://github.com/microsoft/vcpkg "$VCPKG_ROOT"
    cd "$VCPKG_ROOT"
    "$CMD" /c bootstrap-vcpkg.bat
)

do_install_packages () (
    cd "$VCPKG_ROOT"
    ./vcpkg install --binarysource=default "${PACKAGES[@]}"
)

do_make_bundle () (
    TOP=$(git rev-parse --show-toplevel)
    cd "$VCPKG_ROOT"
    ./vcpkg export --x-all-installed --raw --output=vcpkg-installed-win32
    # store the vcpkg SHA so we can reproduce the build
    git rev-parse HEAD > VCPKG-VERSION
    # prune the content so we stay under the github large file limit
    # of 100MB.
    # It would be better to generate the dependencies at build-time
    # and not have the bundle in the repo at all.
    (
        cd vcpkg-installed-win32
        rm -rf vcpkg.exe installed/x86-windows/debug
        find . -name \*.pdb -delete
    )
    zip -q -9 -r vcpkg-installed-win32.zip vcpkg-installed-win32
    install -m 0644 vcpkg-installed-win32.zip "$TOP"/thirdparty/
    rm -rf vcpkg-installed-win32.zip vcpkg-installed-win32
)

# === main ===

if [[ ! $VCPKG_ROOT ]]; then
    VCPKG_ROOT=/c/vcpkg
fi

if [[ ! -d $VCPKG_ROOT ]]; then
    do_bootstrap
fi

do_install_packages
do_make_bundle
