#!/bin/bash

set -x

# usage: unpack_svb_libs windows_SVBCameraSDK_v1.7.3.zip linux_SVBCameraSDK_v1.7.3.tar.gz macos_SVBCameraSDK_v1.7.3.tar.gz

usage () {
    echo 'usage: unpack_svb_libs windows_SVBCameraSDK_v1.7.3.zip linux_SVBCameraSDK_v1.7.3.tar.gz macos_SVBCameraSDK_v1.7.3.tar.gz' >&2
    exit 1
}

# === main ===

if (($# == 1)); then
    set -e
    TMP=$(mktemp -d --tmpdir)
    trap 'rm -rf "$TMP"' EXIT
    unzip -d "$TMP" "$1" && \
    "${BASH_SOURCE[0]}" \
        "$TMP"/SVBONY_v*/windows_SVBCameraSDK_v*.zip \
        "$TMP"/SVBONY_v*/linux_SVBCameraSDK_v*.tar.gz \
        "$TMP"/SVBONY_v*/macos_SVBCameraSDK_v*tar.gz
    exit
fi

WIN=
LINUX=
MACOS=
for f in "$@"; do
    case "${f##*/}" in
        windows*.zip) WIN=$f ;;
        linux*.tar.gz) LINUX=$f ;;
        macos*.tar.gz) MACOS=$f ;;
        *) usage ;;
    esac
done

for f in "$WIN" "$LINUX" "$MACOS"; do
    [[ ! $f || -f $f ]] || \
        usage
done

set -e

TOP=$(cd $(dirname "$0")/..; /bin/pwd)

TMP=$(mktemp -d --tmpdir)
trap 'rm -rf "$TMP"' INT TERM QUIT EXIT

# windows
if [[ $WIN ]]; then
    F=SVBONY
    unzip -q -d "$TMP" "$WIN"
    cp "$TMP/$F/include/SVBCameraSDK.h" "$TOP"/cameras/
    cp "$TMP/$F/lib/x86/SVBCameraSDK.lib" "$TOP"/cameras/
    cp "$TMP/$F/lib/x86/SVBCameraSDK.dll" "$TOP"/WinLibs/
fi

# linux
if [[ $LINUX ]]; then
    mkdir "$TMP/linux"
    tar xfz "$LINUX" -C "$TMP/linux/"
    (
        cd "$TMP/linux/SVBCameraSDK/lib"
        find . -name '*.so' | grep -F -v libusb- | cpio --quiet -pdmuv "$TOP"/cameras/svblibs/linux
        cp "../include/SVBCameraSDK.h" "$TOP"/cameras/
    )
fi

# MacOS
if [[ $MACOS ]]; then
    mkdir "$TMP/mac"
    tar xfz "$MACOS" -C "$TMP/mac/"
    (
        cd "$TMP/mac/SVBCameraSDK/lib"
        find ./x64 ./x86 -name '*.dylib' | grep -v libusb- | cpio --quiet -pdmuv "$TOP"/cameras/svblibs/mac
        cp "../include/SVBCameraSDK.h" "$TOP"/cameras/
    )
fi
