#!/usr/bin/env bash

set -x

# usage: unpack_svb_libs windows_SVBCameraSDK_v1.7.3.zip linux_SVBCameraSDK_v1.7.3.tar.gz macos_SVBCameraSDK_v1.7.3.tar.gz

usage () {
    echo 'usage: unpack_svb_libs windows_SVBCameraSDK_v1.7.3.zip linux_SVBCameraSDK_v1.7.3.tar.gz macos_SVBCameraSDK_v1.7.3.tar.gz' >&2
    exit 1
}

# === main ===

TMP=$(mktemp -d --tmpdir)
trap 'rm -rf "$TMP"' INT TERM QUIT EXIT

WIN=
LINUX=
MACOS=
for f in "$@"; do
    case "${f##*/}" in
        SVBONY_*.zip)
            unzip -q -d "$TMP" "$f"
            # assign to array to expand globs
            files=($TMP/*/windows_*zip $TMP/*/linux_*.tar.gz $TMP/*/macos_*.tar.gz)
            WIN=${files[0]}
            LINUX=${files[1]}
            MACOS=${files[2]}
            ;;
        windows*.zip) WIN=$f ;;
        linux*.tar.gz) LINUX=$f ;;
        macos*.tar.gz) MACOS=$f ;;
        *) usage ;;
    esac
done

for f in "$WIN" "$LINUX" "$MACOS"; do
    [[ ! $f || -f $f ]] || \
        usage
done

set -e

TOP=$(cd $(dirname "$0")/..; /bin/pwd)

# windows
if [[ $WIN ]]; then
    F=SVBONY
    unzip -q -d "$TMP" "$WIN"
    cp "$TMP/$F/include/SVBCameraSDK.h" "$TOP"/cameras/
    cp "$TMP/$F/lib/x86/SVBCameraSDK.lib" "$TOP"/cameras/
    cp "$TMP/$F/lib/x86/SVBCameraSDK.dll" "$TOP"/WinLibs/
fi

# linux
if [[ $LINUX ]]; then
    mkdir "$TMP/linux"
    tar xfz "$LINUX" -C "$TMP/linux/"
    (
        cd "$TMP/linux/SVBCameraSDK/lib"
        # exclude libusb
        find . -name '*.so' | \
            grep -F -v libusb | \
            cpio --quiet -pdmuv "$TOP"/cameras/svblibs/linux
        cp "../include/SVBCameraSDK.h" "$TOP"/cameras/
    )
fi

# MacOS
if [[ $MACOS ]]; then
    mkdir "$TMP/mac"
    tar xfz "$MACOS" -C "$TMP/mac/"
    (
        cd "$TMP/mac/SVBCameraSDK/lib"
        # exclude libusb
        find x64 -name '*.dylib' | \
            grep -F -v libusb | \
            cpio --quiet -pdmuv "$TOP"/cameras/svblibs/mac
        cp "../include/SVBCameraSDK.h" "$TOP"/cameras/
    )
fi
